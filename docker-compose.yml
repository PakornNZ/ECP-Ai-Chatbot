name: ecpai

services:
  database-qdrant:
    image: qdrant/qdrant
    container_name: ecpai-database-qdrant
    environment:
      TZ: Asia/Bangkok
    restart: unless-stopped
    # ports:
    #   - "6333:6333"
    volumes:
      - qdrant-volume:/qdrant/storage
    networks:
      - ecpai-net
  database-postgres:
    image: postgres:17
    container_name: ecpai-database-postgres
    environment:
      TZ: Asia/Bangkok
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - ecpai-net
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.prod
    container_name: ecpai-frontend
    environment:
      TZ: Asia/Bangkok
      RESEND_API_KEY: ${RESEND_API_KEY}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      PRIVATE_API_AUTH: ${PRIVATE_API_AUTH}
      PRIVATE_API_DATA: ${PRIVATE_API_DATA}
      PRIVATE_API_CHAT: ${PRIVATE_API_CHAT}
      PRIVATE_API_DASHBOARD: ${PRIVATE_API_DASHBOARD}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      LINE_CLIENT_ID: ${LINE_CLIENT_ID}
      LINE_CLIENT_SECRET: ${LINE_CLIENT_SECRET}
      LIFF_ID: ${LIFF_ID}
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - ecpai-net
  backend-user:
    build:
      context: .
      dockerfile: backend/user/Dockerfile
    container_name: ecpai-backend-user
    environment:
      TZ: Asia/Bangkok
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    restart: unless-stopped
    volumes:
      - ./backend/user:/app/user
      - ./backend/core:/app/core
    networks:
      - ecpai-net
  backend-data:
    build:
      context: .
      dockerfile: backend/data/Dockerfile
    container_name: ecpai-backend-data
    environment:
      TZ: Asia/Bangkok
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    restart: unless-stopped
    volumes:
      - ./backend/data:/app/data
      - ./backend/core:/app/core
    networks:
      - ecpai-net
  backend-chat:
    build:
      context: .
      dockerfile: backend/chat/Dockerfile
    container_name: ecpai-backend-chat
    environment:
      TZ: Asia/Bangkok
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      QDRANT_PASSWORD: ${QDRANT_PASSWORD}
      QDRANT_HOST: ${QDRANT_HOST}
      QDRANT_PORT: ${QDRANT_PORT}
      COLLECTION_NAME: ${COLLECTION_NAME}
      QDRANT_SIZE: ${QDRANT_SIZE}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      LINE_CHANNEL_ACCESS_TOKEN: ${LINE_CHANNEL_ACCESS_TOKEN}
      LINE_CHANNEL_SECRET: ${LINE_CHANNEL_SECRET}
      OLLAMA_HOST: ${OLLAMA_HOST}
      OLLAMA_PORT: ${OLLAMA_PORT}
      EMBEDDING_MODEL: ${EMBEDDING_MODEL}
      RESPONSE_MODEL: ${RESPONSE_MODEL}
    ports:
      - "8020:8020"
    restart: unless-stopped
    volumes:
      - ./ai/embed/:/app/embed
      - ./backend/chat:/app/chat
      - ./backend/core:/app/core
      - ./backend/response:/app/response
    networks:
      - ecpai-net
  backend-dashboard:
    build:
      context: .
      dockerfile: backend/dashboard/Dockerfile
    container_name: ecpai-backend-dashboard
    environment:
      TZ: Asia/Bangkok
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      QDRANT_PASSWORD: ${QDRANT_PASSWORD}
      QDRANT_HOST: ${QDRANT_HOST}
      QDRANT_PORT: ${QDRANT_PORT}
      COLLECTION_NAME: ${COLLECTION_NAME}
      QDRANT_SIZE: ${QDRANT_SIZE}
      TYPHOON_OCR_API_KEY: ${TYPHOON_OCR_API_KEY}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      EMBEDDING_MODEL: ${EMBEDDING_MODEL}
      EMBEDDING_TOKENIZER: ${EMBEDDING_TOKENIZER}
    restart: unless-stopped
    volumes:
      - ./ai/embed/:/app/embed
      - ./backend/dashboard:/app/dashboard
      - ./backend/core:/app/core
    networks:
      - ecpai-net
  ollama:
    build:
      context: .
      dockerfile: ai/Dockerfile
    container_name: ecpai-ollama
    restart: unless-stopped
    environment:
      RESPONSE_MODEL: ${RESPONSE_MODEL}
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           capabilities: [gpu]
    #           count: all
    volumes:
      - ollama-volume:/root/.ollama
      - ./ai/finetune:/app/finetune
    networks:
      - ecpai-net

volumes:
  qdrant-volume:
    name: qdrant-volume
  postgres-volume:
    name: postgres-volume
  ollama-volume:
    name: ollama-volume

networks:
  ecpai-net:
    name: ecpai-net
    driver: bridge
